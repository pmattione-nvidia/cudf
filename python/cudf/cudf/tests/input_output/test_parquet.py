# Copyright (c) 2023-2025, NVIDIA CORPORATION.

import pandas as pd
import pyarrow as pa
import pyarrow.parquet as pq

import cudf
from cudf._fuzz_testing.utils import compare_dataframe
from cudf.testing import assert_eq


def test_parquet_long_list():
    # This test generates an int list column, where one of the rows has a very large list
    # When generated by the cudf writer this long row is contained on a single page,
    # but when generated by pyarrow it spans several pages.
    # This checks that the parquet reader works properly for long rows spanning several pages.
    large_row = list(range(1, 100000))
    small_row = list(range(1, 10))

    # The long row starts offset from the beginning of the page, spans several pages,
    # and has another row following it on the last page.
    list_rows = pa.array([small_row, large_row, small_row])
    generated_table = pa.Table.from_arrays([list_rows], names=["list_of_list"])

    file_name = "long_row_list_test.pq"
    # https://arrow.apache.org/docs/python/generated/pyarrow.parquet.write_table.html
    pq.write_table(
        generated_table,
        file_name,
        use_dictionary=False,
        data_page_size=65536,
        version="1.0",
        write_page_index=False,
    )
    assert_eq(True, False)

    actual = cudf.read_parquet(file_name)
    expected = pd.read_parquet(file_name)
    compare_dataframe(actual, expected, nullable=False)
